{
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(ag:*)",
      "Bash(find:*)",
      "Bash(pwd:*)",
      "Bash(echo:*)",
      "Bash(which:*)",
      "Bash(type:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(less:*)",
      "Bash(more:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(cut:*)",
      "Bash(awk:*)",
      "Bash(sed:-n*)",
      "Bash(tr:*)",
      "Bash(file:*)",
      "Bash(stat:*)",
      "Bash(du:*)",
      "Bash(df:*)",
      "Bash(tree:*)",
      "Bash(basename:*)",
      "Bash(dirname:*)",
      "Bash(realpath:*)",
      "Bash(whoami:*)",
      "Bash(id:*)",
      "Bash(env:*)",
      "Bash(printenv:*)",
      "Bash(date:*)",
      "Bash(uptime:*)",
      "Bash(ps:*)",
      "Bash(top:*)",
      "Bash(htop:*)",
      "Bash(lsof:*)",
      "Bash(netstat:*)",
      "Bash(ss:*)",
      "Bash(curl:-I*)",
      "Bash(curl:--head*)",
      "Bash(wget:--spider*)",
      "Bash(jq:*)",
      "Bash(yq:*)",
      "Bash(diff:*)",
      "Bash(cmp:*)",
      "Bash(md5sum:*)",
      "Bash(sha256sum:*)",
      "Bash(uname:*)",
      "Bash(hostname:*)",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git branch:-l*)",
      "Bash(git branch:--list*)",
      "Bash(git branch:-a*)",
      "Bash(git branch:-r*)",
      "Bash(git show:*)",
      "Bash(git remote:-v*)",
      "Bash(git remote:show*)",
      "Bash(git tag:*)",
      "Bash(git tag:-l*)",
      "Bash(git blame:*)",
      "Bash(git config:--list*)",
      "Bash(git config:--get*)",
      "Bash(git reflog:*)",
      "Bash(git stash:list*)",
      "Bash(git stash:show*)",
      "Bash(git ls-files:*)",
      "Bash(git rev-parse:*)",
      "Bash(git describe:*)",
      "Bash(git shortlog:*)",
      "Bash(git submodule:status*)",
      "Bash(npm list:*)",
      "Bash(npm ls:*)",
      "Bash(npm view:*)",
      "Bash(npm info:*)",
      "Bash(npm install:*)",
      "Bash(npm ci:*)",
      "Bash(npm show:*)",
      "Bash(npm outdated:*)",
      "Bash(npm audit:*)",
      "Bash(npm run:*)",
      "Bash(npm test:*)",
      "Bash(npm start:*)",
      "Bash(npm config:list*)",
      "Bash(npm config:get*)",
      "Bash(npm doctor:*)",
      "Bash(npm --version:*)",
      "Bash(node:-v*)",
      "Bash(node:--version*)",
      "Bash(node:-e*)",
      "Bash(node:--eval*)",
      "Bash(node:-p*)",
      "Bash(node:--print*)",
      "Bash(npx:--version*)",
      "Bash(nvm:list*)",
      "Bash(nvm:current*)",
      "Bash(nvm:--version*)",
      "Bash(docker:*)",
      "Bash(docker compose:*)",
      "Bash(kubectl get:*)",
      "Bash(kubectl describe:*)",
      "Bash(kubectl logs:*)",
      "Bash(kubectl top:*)",
      "Bash(kubectl api-resources:*)",
      "Bash(kubectl api-versions:*)",
      "Bash(kubectl explain:*)",
      "Bash(kubectl cluster-info:*)",
      "Bash(kubectl config:view*)",
      "Bash(kubectl config:get-contexts*)",
      "Bash(kubectl config:current-context*)",
      "Bash(kubectl version:*)",
      "Bash(kubectl rollout:status*)",
      "Bash(kubectl rollout:history*)",
      "Bash(kubectl events:*)",
      "Bash(kubectl diff:*)",
      "Bash(kubectl auth:can-i*)",
      "Bash(kubectl wait:*)",
      "Bash(kubens:*)",
      "Bash(kubens:-h*)",
      "Bash(kubens:--help*)",
      "Bash(kubectx:*)",
      "Bash(kubectx:-h*)",
      "Bash(kubectx:--help*)",
      "Bash(k9s:--readonly*)",
      "Bash(terraform plan:*)",
      "Bash(terraform show:*)",
      "Bash(terraform version:*)",
      "Bash(terraform fmt:-check*)",
      "Bash(terraform validate:*)",
      "Bash(terraform output:*)",
      "Bash(terraform state:list*)",
      "Bash(terraform state:show*)",
      "Bash(terraform providers:*)",
      "Bash(terraform workspace:list*)",
      "Bash(terraform workspace:show*)",
      "Bash(terraform graph:*)",
      "Bash(helm list:*)",
      "Bash(helm get:*)",
      "Bash(helm version:*)",
      "Bash(helm show:*)",
      "Bash(helm status:*)",
      "Bash(helm history:*)",
      "Bash(helm search:*)",
      "Bash(helm repo:list*)",
      "Bash(helm dependency:list*)",
      "Bash(helm template:*)",
      "Bash(helm lint:*)",
      "Bash(helm test:*)",
      "Bash(helm env:*)",
      "Bash(helmfile list:*)",
      "Bash(helmfile diff:*)",
      "Bash(helmfile status:*)",
      "Bash(helmfile version:*)",
      "Bash(helmfile template:*)",
      "Bash(helmfile lint:*)",
      "Bash(helmfile deps:*)",
      "Bash(helmfile repos:*)",
      "Bash(helmfile write-values:*)",
      "Bash(helmfile build:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr status:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue view:*)",
      "Bash(gh issue status:*)",
      "Bash(gh repo view:*)",
      "Bash(gh repo list:*)",
      "Bash(gh workflow:list*)",
      "Bash(gh workflow:view*)",
      "Bash(gh run:list*)",
      "Bash(gh run:view*)",
      "Bash(gh release:list*)",
      "Bash(gh release:view*)",
      "Bash(gh secret:list*)",
      "Bash(gh auth:status*)",
      "Bash(gh config:list*)",
      "Bash(gh api:*)",
      "Bash(gh status:*)",
      "Bash(gh browse:*)",
      "Bash(gcloud config list:*)",
      "Bash(gcloud config get-value:*)",
      "Bash(gcloud version:*)",
      "Bash(gcloud info:*)",
      "Bash(gcloud auth list:*)",
      "Bash(gcloud projects list:*)",
      "Bash(gcloud compute instances list:*)",
      "Bash(gcloud compute zones list:*)",
      "Bash(gcloud compute regions list:*)",
      "Bash(gcloud container clusters list:*)",
      "Bash(gcloud container clusters describe:*)",
      "Bash(gcloud container node-pools list:*)",
      "Bash(gcloud container images list:*)",
      "Bash(gcloud storage ls:*)",
      "Bash(gcloud storage cat:*)",
      "Bash(gcloud run services list:*)",
      "Bash(gcloud run services describe:*)",
      "Bash(gcloud functions list:*)",
      "Bash(gcloud functions describe:*)",
      "Bash(gcloud logging read:*)",
      "Bash(gcloud monitoring dashboards list:*)",
      "Bash(gcloud iam service-accounts list:*)",
      "Bash(gcloud iam roles list:*)",
      "Bash(gcloud kms keys list:*)",
      "Bash(gcloud kms keyrings list:*)",
      "Bash(gsutil ls:*)",
      "Bash(gsutil cat:*)",
      "Bash(gsutil du:*)",
      "Bash(gsutil stat:*)",
      "Bash(gsutil help:*)",
      "Bash(gsutil version:*)",
      "Bash(make:-n*)",
      "Bash(make:--dry-run*)",
      "Bash(make:-p*)",
      "Bash(make:--print-data-base*)",
      "Bash(make:help*)",
      "Bash(make:-h*)",
      "Bash(make:--help*)",
      "Bash(cmake:--version*)",
      "Bash(cmake:-LA*)",
      "Bash(go version:*)",
      "Bash(go env:*)",
      "Bash(go list:*)",
      "Bash(go mod:graph*)",
      "Bash(go mod:why*)",
      "Bash(go mod:vendor*)",
      "Bash(go mod:verify*)",
      "Bash(go doc:*)",
      "Bash(go test:-list*)",
      "Bash(python --version:*)",
      "Bash(python -V:*)",
      "Bash(python -c:*)",
      "Bash(pip list:*)",
      "Bash(pip show:*)",
      "Bash(pip freeze:*)",
      "Bash(pip --version:*)",
      "Bash(pipenv --version:*)",
      "Bash(pipenv graph:*)",
      "Bash(poetry --version:*)",
      "Bash(poetry show:*)",
      "Bash(poetry env:info*)",
      "Bash(gem list:*)",
      "Bash(bundle --version:*)",
      "Bash(bundle list:*)",
      "Bash(php --version:*)",
      "Bash(php -i:*)",
      "Bash(composer --version:*)",
      "Bash(composer show:*)",
      "Bash(composer outdated:*)",
      "Bash(argocd version:*)",
      "Bash(argocd app list:*)",
      "Bash(argocd app get:*)",
      "Bash(argocd proj list:*)",
      "Bash(argocd repo list:*)",
      "Bash(istioctl version:*)",
      "Bash(istioctl analyze:*)",
      "Bash(istioctl proxy-status:*)",
      "Bash(istioctl proxy-config:*)",
      "Glob(*)",
      "Grep(*)",
      "Read(*)",
      "Bash(grep:*)"
    ],
    "deny": [
      "Bash(kubectl apply:*)",
      "Bash(kubectl delete:*)",
      "Bash(terraform apply:*)",
      "Bash(terraform destroy:*)",
      "Bash(helm install:*)",
      "Bash(helm upgrade:*)",
      "Bash(helm delete:*)",
      "Bash(helmfile apply:*)",
      "Bash(helmfile sync:*)",
      "Bash(helmfile destroy:*)",
      "Bash(helmfile delete:*)"
    ]
  },
  "enableAllProjectMcpServers": false
}
