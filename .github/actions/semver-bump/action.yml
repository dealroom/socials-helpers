name: Semver Bump Version
description: Bump the version in the specified files and create a PR
inputs:
  github-token:
    description: GitHub token to use for creating the PR
    required: true
  version-files:
    description: List of files to update with the new version (comma-separated)
    required: true
  extra-cmd:
    description: Extra command to run after the version bump
    required: false
    default: ""
  tag-prefix:
    description: |
      A prefix that will be striped when parsing tags (e.g. foobar/).
      Any other prefix will be ignored. Useful for monorepos.
    required: false
outputs:
  pull-request-number:
    description: Pull request number created for the version bump
    value: ${{ steps.create-pr.outputs.pull-request-number }}
  new-tag:
    description: The new git tag
    value: ${{ steps.semver.outputs.next }}
runs:
  using: composite
  steps:
    - name: Get Next Version
      id: semver
      uses: ./.github/actions/semver-next-version
      with:
        github-token: ${{ inputs.github-token }}
        tag-prefix: ${{ inputs.tag-prefix }}
    # Strips the leading 'v' from the tag to make file replacement easier
    - id: clean-version
      shell: bash
      run: |
        NEW_TAG=$(echo "${{ steps.semver.outputs.next }}" | sed 's/^v//')
        OLD_TAG=$(echo "${{ steps.semver.outputs.current }}" | sed 's/^v//')
        echo "new_tag=$NEW_TAG" >> "$GITHUB_OUTPUT"
        echo "old_tag=$OLD_TAG" >> "$GITHUB_OUTPUT"
    - uses: richardrigutins/replace-in-files@2a25bd9af1ddff87f61609dfe88956b1ffe84593 # v2.1.11
      with:
        files: ${{ inputs.version-files }}
        search-text: ${{ steps.clean-version.outputs.old_tag }}
        replacement-text: ${{ steps.clean-version.outputs.new_tag }}
    - if: ${{ inputs.extra-cmd != '' }}
      run: |
        ${{ steps.create-pr.outputs.extra-cmd }}
      shell: bash
    - id: create-pr
      uses: ./.github/actions/github-pull-request
      with:
        github-token: ${{ inputs.github-token }}
        branch: release/${{ steps.semver.outputs.next }}
        commit-message: "ci(auto): bump the version to ${{ steps.semver.outputs.next }} #release"
